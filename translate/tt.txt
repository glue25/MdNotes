In function entry identification, two major
heuristics are used. The first heuristic searches function entries
using common prologues/data-mining models. We summarize
the contribution and accuracy of the heuristic in Table XIX in
Appendix D. Without counting functions recursively reachable
from the matched ones, this heuristic recovers 17.36% more
functions with an average precision of 77.53%. Also observ￾able is that utility of this heuristic varies across optimization
levels and architectures. Moreover, existing tools use different
patterns or data-mining models, competing for a coverage￾accuracy trade-off. Comparing to GHIDRA-NE and RADARE2,
ANGR-NS and DYNINST use more aggressive patterns/models,
producing higher coverage (21.3%/24.02 v.s. 18.24%/7.93%) but
lower precision (56.61%/85.37% v.s. 98.42%/87.29%).
The other heuristic, used by ANGR, takes the begin of
each code region detected by linear scan as a function entry.
The heuristic recovers 23% more functions but reduces the
precision by 26.96% because it often considers the begin of
padding or data-in-code as a function entry.
